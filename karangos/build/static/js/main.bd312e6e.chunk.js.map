{"version":3,"sources":["ui/MainMenu.js","img/karangos.png","ui/TopBar.js","ui/FooterBar.js","ui/ConfirmDialog.js","routed/KarangosList2.js","routed/KarangosForm.js","routed/ClientsList.js","routed/ClientsForm.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","menuButton","marginRight","spacing","menuLink","color","palette","text","primary","textDecoration","MainMenu","classes","React","useState","anchorEl","setAnchorEl","handleClose","IconButton","edge","className","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","Boolean","onClose","MenuItem","to","root","flexGrow","logo","width","TopBar","AppBar","position","Toolbar","src","logotipo","alt","toolbar","backgroundColor","background","paper","minHeight","bottom","link","secondary","light","FooterBar","Typography","variant","display","align","fontSize","href","useStyle","dialogContent","justifyContent","warningIcon","yellow","ConfirmDialog","title","isOpen","children","result","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","table","minWidth","dataGrid","visibility","paddingRight","margin","KarangosList","karangos","setKarangos","deletable","setDeletable","dialogOpen","setDialogOpen","sbOpen","setSbOpen","sbSeverity","setSbSeverity","sbMessage","setSbMessage","history","useHistory","getData","a","axios","get","response","data","length","console","error","delete","message","handleSbClose","useEffect","columns","field","headerName","headerAlign","flex","sortComparator","v1","v2","Number","renderCell","params","Checkbox","checked","value","readOnly","valueFormatter","toLocaleString","style","currency","push","deleteItem","Snackbar","autoHideDuration","elevation","severity","size","startIcon","Paper","rows","pageSize","autoHeight","disableSelectionOnClick","form","flexWrap","maxWidth","marginTop","KarangosForm","years","i","Date","getFullYear","marca","modelo","cor","ano_fabricacao","importado","placa","preco","karango","setKarango","importadoChecked","setImportadoChecked","disabled","label","sendBtnStatus","setSendBtnStatus","sbStatus","setSbStatus","setError","isModified","setIsModified","setTitle","useParams","handleInputChange","property","karangoTemp","target","newState","toUpperCase","validate","isValid","errorTemp","trim","includes","isNaN","put","post","onSubmit","preventDefault","saveData","TextField","onChange","required","placeholder","fullWidth","helperText","select","map","year","FormControl","FormControlLabel","control","mask","formatChars","type","onFocus","InputProps","startAdornment","InputAdornment","ClientsList","clients","setClients","ClientsForm","nome","cpf","rg","logradouro","num_imovel","complemento","bairro","municipio","uf","telefone","email","client","setClient","clientTemp","estado","createMuiTheme","main","pink","default","paddingBottom","routed","padding","fontFamily","typography","Main","Box","path","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd312e6e.chunk.js","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Link } from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    menuLink: {\n      color: theme.palette.text.primary,\n      textDecoration: 'none' // Tirando o sublinhado\n    }\n  }));\n  \n\nexport default function MainMenu() {\n  const classes = useStyles()\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n\n      <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n            <MenuIcon />\n      </IconButton>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={handleClose}>\n          <Link to=\"/list\" className={classes.menuLink}>Listar Karangos</Link>\n          </MenuItem>\n\n        <MenuItem onClick={handleClose}>\n          <Link to=\"/listc\" className={classes.menuLink}>Listar Clientes</Link>\n          </MenuItem>\n        \n        <MenuItem onClick={handleClose}>\n          <Link to=\"/new\" className={classes.menuLink}>Cadastrar Novo Karango</Link>\n          </MenuItem>\n\n        <MenuItem onClick={handleClose}>\n          <Link to=\"/newc\" className={classes.menuLink}>Cadastrar Novo Cliente</Link>\n          </MenuItem>\n      </Menu>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/karangos.637f9a06.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport MainMenu from './MainMenu.js';\nimport logotipo from '../img/karangos.png'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  logo: {\n      width: '300px'\n  }\n\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <MainMenu />\n          <img src={logotipo} className={classes.logo} alt=\"Karangos\" />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}","import { Typography, Toolbar } from \"@material-ui/core\";\nimport LocalCafeTwoToneIcon from '@material-ui/icons/LocalCafeTwoTone';\nimport { makeStyles } from \"@material-ui/core/styles\"\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: {\n      backgroundColor: theme.palette.background.paper,\n      minHeight: '42px',\n      width: '100%',\n      // Posicionamento do footer na parte inferior da pagina\n      position: 'fixed',\n      bottom: 0\n    },\n    text: {\n      width: '100%'\n    },\n    link: {\n      color: theme.palette.secondary.light,\n      textDecoration: 'none', // Tira o sublinhado do link\n      '&:hover': { // Mouse sobre o link\n        textDecoration: 'underline' // Retorna o sublinhado\n      }\n    }\n  }));\n    \nexport default function FooterBar() {\n    const classes = useStyles();\n    return (\n        <Toolbar className={classes.toolbar}>\n            <Typography className={classes.text} variant=\"caption\" display=\"block\" align=\"center\" color=\"textSecondary\">\n                Produzido com <LocalCafeTwoToneIcon fontSize=\"small\"/> \n                por <a className={classes.link} href=\"mailto:samarasilvacandy@gmail.com\">Samara Silva</a>\n            </Typography>\n        </Toolbar> \n    )\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles } from '@material-ui/core/styles';\nimport yellow from '@material-ui/core/colors/yellow'\n\nconst useStyle = makeStyles(theme => ({\n  dialogContent: {\n    display: 'flex',\n    justifyContent: 'space-between'\n  },\n  warningIcon: {\n    color: yellow[500],\n    marginRight: theme.spacing(2)\n  }\n}))\n\nexport default function ConfirmDialog({title = 'Confirmar', isOpen = false, onClose, children}) {\n  const classes = useStyle()\n\n  const handleClose = (result) => {\n    onClose(result)\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={isOpen}\n        onClose={() => handleClose(false)}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent className={classes.dialogContent}>\n          <WarningIcon className={classes.warningIcon} fontSize=\"large\" />\n          <DialogContentText id=\"alert-dialog-description\">\n            {children}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => handleClose(true)} color=\"primary\">\n            OK\n          </Button>\n          <Button onClick={() => handleClose(false)} color=\"primary\" autoFocus>\n            Cancelar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox'\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { DataGrid } from '@material-ui/data-grid'\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  dataGrid: {\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\n      visibility: 'hidden'\n    },\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n      visibility: 'visible'\n    }\n  },\n  toolbar: {\n    justifyContent: 'flex-end',\n    paddingRight: 0,\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nexport default function KarangosList() {\n  const classes = useStyles()\n\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n  const [karangos, setKarangos] = useState([])\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n  const [sbOpen, setSbOpen] = useState(false)\n  const [sbSeverity, setSbSeverity] = useState('success')\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n  \n  const history = useHistory()\n\n  useEffect(() => {\n    getData()\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n         // é executado apenas uma vez, no carregamento inicial do componente\n\n  async function getData() {\n    try { // tenta buscar os dados\n      let response = await axios.get('https://api.faustocintra.com.br/karangos?by=marca,modelo')\n      if(response.data.length > 0) setKarangos(response.data)\n    }\n    catch(error) {\n      console.error(error)\n    }\n  }\n\n  async function deleteItem() {\n    try {\n      await axios.delete(`https://api.faustocintra.com.br/karangos/${deletable}`)\n      getData()     // Atualiza os dados da tabela\n      setSbSeverity('success')\n      setSbMessage('Exclusão efetuada com sucesso.')\n    }\n    catch(error) {\n      setSbSeverity('error')\n      setSbMessage('ERRO: ' + error.message)\n    }\n    setSbOpen(true)   // Exibe a snackbar\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou com a exclusão \n    if(result) deleteItem()\n  }\n\n  function handleDelete(id) {\n    setDeletable(id)\n    setDialogOpen(true)\n  }\n\n  function handleSbClose() {\n    setSbOpen(false)    // Fecha a snackbar\n  }\n\n  const columns = [\n    { \n      field: 'id', \n      headerName: 'Cód.',\n      align: 'right',\n      headerAlign: 'right',  \n      flex: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    { \n      field: 'marca', \n      headerName: 'Marca',\n      flex: true \n    },\n    { \n      field: 'modelo', \n      headerName: 'Modelo',\n      flex: true \n    },\n    { \n      field: 'cor', \n      headerName: 'Cor',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'ano_fabricacao', \n      headerName: 'Ano',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1 \n    },\n    { \n      field: 'importado', \n      headerName: 'Importado?',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      renderCell: params => (\n        <Checkbox checked={params.value === \"1\"} readOnly />\n      )\n    },\n    { \n      field: 'placa', \n      headerName: 'Placa',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'preco', \n      headerName: 'Preço',\n      align: 'right', \n      headerAlign: 'right', \n      flex: true,\n      valueFormatter: params => (\n        Number(params.value).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })\n      ),\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    { \n      field: 'editar',\n      headerName: 'Editar',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/edit/${params.id}`)}>\n          <EditIcon />\n        </IconButton>\n      )\n    },\n    { \n      field: 'excluir',\n      headerName: 'Excluir',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      )\n    },\n  ];\n\n  return (\n    <>\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Deseja realmente excluir este karango?\n      </ConfirmDialog>\n      \n      <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\n          {sbMessage}\n        </MuiAlert>\n      </Snackbar>\n      \n      <h1>Listagem de Karangos</h1>\n      <Toolbar className={classes.toolbar}>\n        <Button color=\"secondary\" variant=\"contained\" size=\"large\" \n          startIcon={<AddBoxIcon />} onClick={() => history.push('/new')}>\n          Novo Karango\n        </Button>\n      </Toolbar>\n      <Paper elevation={4}>\n        <DataGrid className={classes.dataGrid} rows={karangos} columns={columns} pageSize={10} autoHeight={true} disableSelectionOnClick={true} />\n      </Paper>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport FormControl from '@material-ui/core/FormControl'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport InputMask from 'react-input-mask'\nimport { makeStyles } from '@material-ui/core/styles'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport React from 'react'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  }\n}))\n\nexport default function KarangosForm() {\n  const classes = useStyles()\n\n  const colors = [\n    'Amarelo',\n    'Azul',\n    'Bege',\n    'Branco',\n    'Cinza',\n    'Dourado',\n    'Laranja',\n    'Marrom',\n    'Prata',\n    'Preto',\n    'Rosa',\n    'Roxo',\n    'Verde',\n    'Vermelho',\n    'Vinho'\n  ]\n\n  const years = []\n  for(let i = (new Date()).getFullYear(); i >= 1900; i--) years.push(i)\n\n  // Classes de caracters para a máscara da placa\n  // 1) Três primeiras posições, somente letras (maiúsculas ou minúsculas) ~> [A-Za-z]\n  // 2) Quinta, sétima e oitava posições, somente dígitos ~> [0-9]\n  // 3) Sexta posição: dígitos ou letras (maiúsculas ou minúsculas) de A a J ~> [0-9A-Ja-j]\n  const formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n  }\n\n  // Máscara de entrada para a placa\n  const placaMask = 'AAA-0#00'\n\n  // Máscara para CPF: '000.000.000-00'\n  // Máscara para CNPJ: '00.000.000/0000-00'\n\n  const [karango, setKarango] = useState({\n    id: null,\n    marca: '',\n    modelo: '',\n    cor: '',\n    ano_fabricacao: (new Date()).getFullYear(),    // Ano corrente\n    importado: '0',\n    placa: '',\n    preco: 0\n  })\n  \n\n  const [importadoChecked, setImportadoChecked] = useState(false)\n\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  })\n\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: '' \n  })\n\n  const [error, setError] = useState({\n    marca: '',\n    modelo: '',\n    cor: '',\n    placa: '',\n    preco: ''\n  })\n\n  const [isModified, setIsModified] = useState(false)\n\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n  const [title, setTitle] = useState('Cadastrar novo Karango')\n\n  const history = useHistory()\n  const params = useParams()\n\n  // useEffect() para quando o formulário for carregado (só na inicialização)\n  useEffect(() => {\n    // Verificamos se a rota atual contém o parâmetro id\n    // Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\n    if(params.id) {\n      setTitle('Editar karango')\n      getData(params.id)\n    }\n  }, [])\n\n  async function getData(id) {\n    try {\n      let response = await axios.get(`https://api.faustocintra.com.br/karangos/${id}`)\n      setKarango(response.data)\n    }\n    catch(error) {\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: 'Não foi possível carregar os dados para edição.'\n      })\n    }\n  }\n\n  function handleInputChange(event, property) {\n\n    const karangoTemp = {...karango}\n\n\n    if(event.target.id) property = event.target.id\n\n    if(property === 'importado') {\n      const newState = ! importadoChecked // Inverte o valor\n      if(newState) karangoTemp.importado = '1'\n      else karangoTemp.importado = '0'\n      setImportadoChecked(newState) \n    }\n    else if(property === 'placa') {\n      karangoTemp.placa = event.target.value.toUpperCase()\n    }\n    else {\n      // Quando o nome de uma propriedade de objeto aparece entre [],\n      // significa que o nome da propriedade será determinado pela\n      // variável ou expressão contida dentro dos colchetes\n      karangoTemp[property] = event.target.value\n    }\n    setKarango(karangoTemp)\n    setIsModified(true)   // O formulário foi modificado\n    validate(karangoTemp)  // Dispara a validação\n  }\n\n  function validate(data) {\n    let isValid = true\n\n    const errorTemp = {\n      marca: '',\n      modelo: '',\n      cor: '',\n      placa: '',\n      preco: ''\n    }\n\n    // trim(): retira espaços em branco do início e do final de uma string\n    if(data.marca.trim() === '') {\n      errorTemp.marca = 'A marca deve ser preenchida'\n      isValid = false\n    }     \n\n    if(data.modelo.trim() === '') {\n      errorTemp.modelo = 'O modelo deve ser preenchido'\n      isValid = false\n    }\n\n    if(data.cor.trim() === '') {\n      errorTemp.cor = 'A cor deve ser informada'\n      isValid = false\n    }\n\n    // A placa não pode ser string vazia nem conter sublinhado\n    if(data.placa.trim() === '' || data.placa.includes('_')) {\n      errorTemp.placa = 'A placa deve ser preenchida corretamente'\n      isValid = false\n    }\n\n    // O preço deve ser numérico e maior que zero\n    if(isNaN(data.preco) || Number(data.preco) <= 0) {\n      errorTemp.preco = 'O preço deve ser informado e maior que zero'\n      isValid = false\n    }\n\n    setError(errorTemp)\n    return isValid\n  }\n\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({disabled: true, label: 'Enviando...'})\n      \n      // Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\n      if(params.id) await axios.put(`https://api.faustocintra.com.br/karangos/${params.id}`, karango)\n      // Senão, estaremos criando um novo registro, e o verbo HTTP a ser usado é o POST\n      else await axios.post('https://api.faustocintra.com.br/karangos', karango)\n      \n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'success', message: 'Dados salvos com sucesso!'})\n      \n    }\n    catch(error) {\n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'error', message: 'ERRO: ' + error.message})\n    }\n    // Restaura o estado inicial do botão de envio\n    setSendBtnStatus({disabled: false, label: 'Enviar'})\n  }\n\n  function handleSubmit(event) {\n\n    event.preventDefault()    // Evita que a página seja recarregada\n\n    // Só envia para o banco de dados se o formulário for válido\n    if(validate(karango)) saveData()\n\n  }\n\n  function handleSbClose() {\n    setSbStatus({...sbStatus, open: false})\n\n    // Retorna para a página de listagem em caso de sucesso\n    if(sbStatus.severity === 'success') history.push('/list')\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou em voltar \n    if(result) history.push('/list')\n  }\n\n  function handleGoBack() {\n    // Se o formulário tiver sido modificado, exibimos o diálogo de confirmação\n    if(isModified) setDialogOpen(true)\n    // Senão, podemos voltar diretamente para a listagem\n    else history.push('/list')\n  }\n\n  return (\n    <>\n\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Há dados não salvos. Deseja realmente voltar?\n      </ConfirmDialog>\n\n      <Snackbar open={sbStatus.open} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbStatus.severity}>\n          {sbStatus.message}\n        </MuiAlert>\n      </Snackbar>\n\n      <h1>{title}</h1>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        \n        <TextField \n          id=\"marca\" \n          label=\"Marca\" \n          variant=\"filled\"\n          value={karango.marca}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe a marca do veículo\"\n          fullWidth\n          error={error.marca !== ''}\n          helperText={error.marca}\n        />\n\n        <TextField \n          id=\"modelo\" \n          label=\"Modelo\" \n          variant=\"filled\"\n          value={karango.modelo}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o modelo do veículo\"\n          fullWidth\n          error={error.modelo !== ''}\n          helperText={error.modelo}\n        />\n\n        <TextField \n          id=\"cor\" \n          label=\"Cor\" \n          variant=\"filled\"\n          value={karango.cor}\n          onChange={event => handleInputChange(event, 'cor')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe a cor do veículo\"\n          select\n          fullWidth\n          error={error.cor !== ''}\n          helperText={error.cor}\n        >\n          { colors.map(color => <MenuItem value={color} key={color}>{color}</MenuItem>)}\n        </TextField>\n\n        <TextField \n          id=\"ano_fabricacao\" \n          label=\"Ano de fabricação\" \n          variant=\"filled\"\n          value={karango.ano_fabricacao}\n          onChange={event => handleInputChange(event, 'ano_fabricacao')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o ano de fabricação do veículo\"\n          select\n          fullWidth\n        >\n          { years.map(year => <MenuItem value={year} key={year}>{year}</MenuItem>)}\n        </TextField>\n\n        <FormControl fullWidth>\n          <FormControlLabel control={\n            <Checkbox\n              id=\"importado\"\n              checked={importadoChecked}\n              onChange={handleInputChange}\n            />\n          }\n          label=\"Importado?\"\n        />\n        </FormControl>\n\n        <InputMask\n          id=\"placa\" \n          mask={placaMask}\n          formatChars={formatChars}\n          value={karango.placa}\n          onChange={(event) => handleInputChange(event, 'placa')}\n        >\n          {() => <TextField \n            label=\"Placa\" \n            variant=\"filled\"\n            required  /* not null, precisa ser preenchido */\n            placeholder=\"Informe a placa do veículo\"\n            fullWidth\n            error={error.placa !== ''}\n            helperText={error.placa}\n          />}\n        </InputMask>\n\n        <TextField \n          id=\"preco\" \n          label=\"Preço\" \n          variant=\"filled\"\n          value={karango.preco}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o valor do veículo\"\n          fullWidth\n          type=\"number\"\n          onFocus={event => event.target.select()}  // Seleciona o conteúdo ao focar\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">R$</InputAdornment>,\n          }}\n          error={error.preco !== ''}\n          helperText={error.preco}\n        />\n\n        <Toolbar className={classes.toolbar}>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\" disabled={sendBtnStatus.disabled}>\n            {sendBtnStatus.label}\n          </Button>\n          <Button variant=\"contained\" onClick={handleGoBack}>Voltar</Button>\n        </Toolbar>\n\n        {/* <div>\n          {JSON.stringify(karango)}\n          <br />\n          currentId: {JSON.stringify(currentId)}\n          <br />\n          isModified: {JSON.stringify(isModified)}\n        </div> */}\n      </form>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport AddBoxIcon from '@material-ui/icons/AddBox';\nimport { useHistory } from 'react-router-dom'\nimport ConfirmDialog from '../ui/ConfirmDialog'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { DataGrid } from '@material-ui/data-grid'\n\nconst useStyles = makeStyles(theme => ({\n  table: {\n    minWidth: 650,\n  },\n  dataGrid: {\n    '& .MuiDataGrid-row button': {       // Esconde os botões na linha de tabela \"normal\"\n      visibility: 'hidden'\n    },\n    '& .MuiDataGrid-row:hover button': { // Exibe os botões de volta quando o mouse passar por cima\n      visibility: 'visible'\n    }\n  },\n  toolbar: {\n    justifyContent: 'flex-end',\n    paddingRight: 0,\n    margin: theme.spacing(2, 0)\n  }\n}));\n\nexport default function ClientsList() {\n  const classes = useStyles()\n\n  // Variáveis que conterão dados PRECISAM ser inicializadas como vetores vazios\n  const [clients, setClients] = useState([])\n  const [deletable, setDeletable] = useState()        // Código do registro a ser excluído\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n  const [sbOpen, setSbOpen] = useState(false)\n  const [sbSeverity, setSbSeverity] = useState('success')\n  const [sbMessage, setSbMessage] = useState('Exclusão realizada com sucesso.')\n  \n  const history = useHistory()\n\n  useEffect(() => {\n    getData()\n  }, []) // Quando a lista de dependências é um vetor vazio, o useEffect()\n         // é executado apenas uma vez, no carregamento inicial do componente\n\n  async function getData() {\n    try { // tenta buscar os dados\n      let response = await axios.get('https://api.faustocintra.com.br/clientes?by=nome,id')\n      if(response.data.length > 0) setClients(response.data)\n    }\n    catch(error) {\n      console.error(error)\n    }\n  }\n\n  async function deleteItem() {\n    try {\n      await axios.delete(`https://api.faustocintra.com.br/clientes/${deletable}`)\n      getData()     // Atualiza os dados da tabela\n      setSbSeverity('success')\n      setSbMessage('Exclusão efetuada com sucesso.')\n    }\n    catch(error) {\n      setSbSeverity('error')\n      setSbMessage('ERRO: ' + error.message)\n    }\n    setSbOpen(true)   // Exibe a snackbar\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou com a exclusão \n    if(result) deleteItem()\n  }\n\n  function handleDelete(id) {\n    setDeletable(id)\n    setDialogOpen(true)\n  }\n\n  function handleSbClose() {\n    setSbOpen(false)    // Fecha a snackbar\n  }\n\n  const columns = [\n    { \n      field: 'id', \n      headerName: 'ID.',\n      align: 'right',\n      headerAlign: 'right',  \n      flex: true,\n      sortComparator: (v1, v2) => Number(v1) > Number(v2) ? 1 : -1\n    },\n    { \n      field: 'nome', \n      headerName: 'Nome',\n      flex: true \n    },\n    { \n      field: 'cpf', \n      headerName: 'CPF',\n      flex: true\n    },\n    { \n      field: 'rg', \n      headerName: 'RG',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'logradouro', \n      headerName: 'Logradouro',\n      align: 'center', \n      headerAlign: 'center',\n      flex: true \n    },\n    { \n      field: 'num_imovel', \n      headerName: 'Nº Imóvel',\n      align: 'center',\n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'complemento', \n      headerName: 'Complemento',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true\n    },\n    { \n      field: 'bairro', \n      headerName: 'Bairro',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'municipio', \n      headerName: 'Município',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true\n    },\n    { \n      field: 'uf', \n      headerName: 'Estado',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'telefone', \n      headerName: 'Telefone',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true \n    },\n    { \n      field: 'email', \n      headerName: 'E-Mail',\n      align: 'right', \n      headerAlign: 'right', \n      flex: true\n    },\n    { \n      field: 'editar',\n      headerName: 'Editar',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"editar\" onClick={() => history.push(`/editc/${params.id}`)}>\n          <EditIcon />\n        </IconButton>\n      )\n    },\n    { \n      field: 'excluir',\n      headerName: 'Excluir',\n      align: 'center', \n      headerAlign: 'center', \n      flex: true,\n      renderCell: params => (\n        <IconButton aria-label=\"excluir\" onClick={() => handleDelete(params.id)}>\n          <DeleteIcon color=\"error\" />\n        </IconButton>\n      )\n    },\n  ];\n\n  return (\n    <>\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Deseja realmente excluir este cliente?\n      </ConfirmDialog>\n      \n      <Snackbar open={sbOpen} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbSeverity}>\n          {sbMessage}\n        </MuiAlert>\n      </Snackbar>\n      \n      <h1>Listagem de Clientes</h1>\n      <Toolbar className={classes.toolbar}>\n        <Button color=\"secondary\" variant=\"contained\" size=\"large\" \n          startIcon={<AddBoxIcon />} onClick={() => history.push('/newc')}>\n          Novo Cliente\n        </Button>\n      </Toolbar>\n      <Paper elevation={4}>\n        <DataGrid className={classes.dataGrid} rows={clients} columns={columns} pageSize={10} autoHeight={true} disableSelectionOnClick={true} />\n      </Paper>\n    </>\n  )\n}","import { useState, useEffect } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport InputMask from 'react-input-mask'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport axios from 'axios'\nimport { useHistory, useParams } from 'react-router-dom'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport MuiAlert from '@material-ui/lab/Alert'\nimport React from 'react'\nimport ConfirmDialog from '../ui/ConfirmDialog'\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    display: 'flex',\n    justifyContent: 'space-around',\n    flexWrap: 'wrap',\n    maxWidth: '80%',\n    margin: '0 auto',\n    '& .MuiFormControl-root': {\n      minWidth: '200px',\n      maxWidth: '500px',\n      margin: '0 24px 24px 0'\n    }\n  },\n  toolbar: {\n    display: 'flex',\n    width: '100%',\n    justifyContent: 'space-around',\n    marginTop: '36px'\n  }\n}))\n\nexport default function ClientsForm() {\n  const classes = useStyles()\n\n  const estados = [\n    'AC',\n    'AL',\n    'AP',\n    'AM',\n    'BA',\n    'CE',\n    'DF',\n    'ES',\n    'GO',\n    'MA',\n    'MT',\n    'MS',\n    'MG',\n    'PA',\n    'PB',\n    'PR',\n    'PE',\n    'PI',\n    'RJ',\n    'RN',\n    'RS',\n    'RO',\n    'RR',\n    'SC',\n    'SP',\n    'SE',\n    'TO'\n  ]\n\n  // Classes de caracters para a máscara da placa\n  // 1) Três primeiras posições, somente letras (maiúsculas ou minúsculas) ~> [A-Za-z]\n  // 2) Quinta, sétima e oitava posições, somente dígitos ~> [0-9]\n  // 3) Sexta posição: dígitos ou letras (maiúsculas ou minúsculas) de A a J ~> [0-9A-Ja-j]\n  const formatChars = {\n    'A': '[A-Za-z]',\n    '0': '[0-9]',\n    '#': '[0-9A-Ja-j]'\n  }\n\n  const cpfMask = '000.000.000-00'\n  const telMask = '(00)00000-0000'\n  const rgMask = '00.000.000-0'\n  // Máscara para CPF: '000.000.000-00'\n  // Máscara para CNPJ: '00.000.000/0000-00'\n\n  const [client, setClient] = useState({\n    id: null,\n    nome: '',\n    cpf: '',\n    rg: '',\n    logradouro: '',\n    num_imovel: '',\n    complemento: '',\n    bairro: '',\n    municipio: '',\n    uf: '',\n    telefone: '',\n    email:''\n  })\n\n  const [sendBtnStatus, setSendBtnStatus] = useState({\n    disabled: false,\n    label: 'Enviar'\n  })\n\n  const [sbStatus, setSbStatus] = useState({\n    open: false,\n    severity: 'success',\n    message: '' \n  })\n\n  const [error, setError] = useState({\n    nome: '',\n    cpf: '',\n    rg: '',\n    logradouro: '',\n    num_imovel: '',\n    bairro: '',\n    municipio: '',\n    uf: '',\n    telefone: '',\n    email:''\n  })\n\n  const [isModified, setIsModified] = useState(false)\n\n  const [dialogOpen, setDialogOpen] = useState(false) // O diálogo de confirmação está aberto?\n\n  const [title, setTitle] = useState('Cadastrar novo Cliente')\n\n  const history = useHistory()\n  const params = useParams()\n\n  // useEffect() para quando o formulário for carregado (só na inicialização)\n  useEffect(() => {\n    // Verificamos se a rota atual contém o parâmetro id\n    // Em caso positivo, buscamos os dados no back-end e carregamos o formulário para edição\n    if(params.id) {\n      setTitle('Editar Cliente')\n      getData(params.id)\n    }\n  }, [])\n\n  async function getData(id) {\n    try {\n      let response = await axios.get(`https://api.faustocintra.com.br/clientes/${id}`)\n      setClient(response.data)\n    }\n    catch(error) {\n      setSbStatus({\n        open: true,\n        severity: 'error',\n        message: 'Não foi possível carregar os dados para edição.'\n      })\n    }\n  }\n\n  function handleInputChange(event, property) {\n    \n    const clientTemp = {...client}\n\n\n    if(event.target.id) property = event.target.id\n\n    clientTemp[property] = event.target.value\n\n    setClient(clientTemp)\n    setIsModified(true)   // O formulário foi modificado\n    validate(clientTemp)  // Dispara a validação\n  }\n\n  function validate(data) {\n    let isValid = true\n\n    const errorTemp = {\n      nome: '',\n      cpf: '',\n      rg: '',\n      logradouro: '',\n      num_imovel: '',\n      bairro: '',\n      municipio: '',\n      uf: '',\n      telefone: '',\n      email:''\n    }\n\n    // trim(): retira espaços em branco do início e do final de uma string\n    if(data.nome.trim() === '') {\n      errorTemp.nome = 'O nome do cliente deve ser preenchido!'\n      isValid = false\n    }     \n\n    if(data.cpf.trim() === '' || data.cpf.includes('_')) {\n      errorTemp.cpf = 'O cpf deve ser preenchido corretamente!'\n      isValid = false\n    }\n\n    if(data.rg.trim() === '' || data.rg.includes('_')) {\n      errorTemp.rg = 'O rg deve ser preenchido corretamente!'\n      isValid = false\n    }\n\n    if(data.logradouro.trim() === '') {\n      errorTemp.logradouro = 'O logradouro do cliente deve ser informado!'\n      isValid = false\n    }\n\n    if(data.num_imovel.trim() === '') {\n      errorTemp.num_imovel = 'O número da casa deve ser informado!'\n      isValid = false\n    }\n\n    if(data.bairro.trim() === '') {\n      errorTemp.bairro = 'O bairro deve ser informado!'\n      isValid = false\n    }\n\n\n    if(data.municipio.trim() === '') {\n      errorTemp.municipio = 'O múnicipio deve ser informado!'\n      isValid = false\n    }\n\n    if(data.uf.trim() === '') {\n      errorTemp.uf = 'O estado deve ser informado!'\n      isValid = false\n    }\n\n    // O telefone não pode ser uma string vazia\n    if(data.telefone.trim() === '' || data.telefone.includes('_')) {\n      errorTemp.telefone = 'O telefone deve ser preenchido corretamente!'\n      isValid = false\n    }\n\n    if(data.email.trim() === '') {\n      errorTemp.email = 'O email deve ser informado!'\n      isValid = false\n    }\n\n    setError(errorTemp)\n    return isValid\n  }\n\n  async function saveData() {\n    try {\n      // Desabilita o botão de enviar para evitar envios duplicados\n      setSendBtnStatus({disabled: true, label: 'Enviando...'})\n      \n      // Se estivermos editando, precisamos enviar os dados com o verbo HTTP PUT\n      if(params.id) await axios.put(`https://api.faustocintra.com.br/clientes/${params.id}`, client)\n      // Senão, estaremos criando um novo registro, e o verbo HTTP a ser usado é o POST\n      await axios.post('https://api.faustocintra.com.br/clientes', client)\n      \n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'success', message: 'Dados salvos com sucesso!'})\n      \n    }\n    catch(error) {\n      // Mostra a SnackBar\n      setSbStatus({open: true, severity: 'error', message: 'ERRO: ' + error.message})\n    }\n    // Restaura o estado inicial do botão de envio\n    setSendBtnStatus({disabled: false, label: 'Enviar'})\n  }\n\n  function handleSubmit(event) {\n\n    event.preventDefault()    // Evita que a página seja recarregada\n\n    if(validate(client)) saveData()\n\n  }\n\n  function handleSbClose() {\n    setSbStatus({...sbStatus, open: false})\n\n    // Retorna para a página de listagem em caso de sucesso\n    if(sbStatus.severity === 'success') history.push('/listc')\n  }\n\n  function handleDialogClose(result) {\n    setDialogOpen(false)\n\n    // Se o usuário concordou em voltar \n    if(result) history.push('/listc')\n  }\n\n  function handleGoBack() {\n    // Se o formulário tiver sido modificado, exibimos o diálogo de confirmação\n    if(isModified) setDialogOpen(true)\n    // Senão, podemos voltar diretamente para a listagem\n    else history.push('/listc')\n  }\n\n  return (\n    <>\n\n      <ConfirmDialog isOpen={dialogOpen} onClose={handleDialogClose}>\n        Há dados não salvos. Deseja realmente sair?\n      </ConfirmDialog>\n\n      <Snackbar open={sbStatus.open} autoHideDuration={6000} onClose={handleSbClose}>\n        <MuiAlert elevation={6} variant=\"filled\" onClose={handleSbClose} severity={sbStatus.severity}>\n          {sbStatus.message}\n        </MuiAlert>\n      </Snackbar>\n\n      <h1>{title}</h1>\n      <form className={classes.form} onSubmit={handleSubmit}>\n        \n        <TextField \n          id=\"nome\" \n          label=\"Nome\" \n          variant=\"filled\"\n          value={client.nome}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o nome do cliente\"\n          fullWidth\n          error={error.nome !== ''}\n          helperText={error.nome}\n        />\n\n        <InputMask\n          id=\"cpf\" \n          mask={cpfMask}\n          formatChars={formatChars}\n          value={client.cpf}\n          onChange={(event) => handleInputChange(event, 'cpf')}\n        >\n          {() => <TextField \n            label=\"CPF\" \n            variant=\"filled\"\n            required  /* not null, precisa ser preenchido */\n            placeholder=\"Informe o CPF do cliente\"\n            fullWidth\n            error={error.cpf !== ''}\n            helperText={error.cpf}\n          />}\n        </InputMask>\n\n        <InputMask \n          id=\"rg\"\n          mask={rgMask}\n          formatChars={formatChars} \n          value={client.rg}\n          onChange={(event) => handleInputChange(event, 'rg')}\n        >\n          {() => <TextField\n          label=\"RG\" \n          variant=\"filled\"\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o RG do cliente\"\n          fullWidth\n          error={error.rg !== ''}\n          helperText={error.rg}\n        />}\n        </InputMask>\n\n        <TextField \n          id=\"logradouro\" \n          label=\"Logradouro\" \n          variant=\"filled\"\n          value={client.logradouro}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o nome da rua do cliente\"\n          fullWidth\n          error={error.logradouro !== ''}\n          helperText={error.logradouro}\n        />\n\n        <TextField \n          id=\"num_imovel\" \n          label=\"Nº Imóvel\" \n          variant=\"filled\"\n          value={client.num_imovel}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o número da casa do cliente\"\n          fullWidth\n          error={error.num_imovel !== ''}\n          helperText={error.num_imovel}\n        />\n\n        <TextField \n          id=\"complemento\" \n          label=\"Complemento\" \n          variant=\"filled\"\n          value={client.complemento}\n          onChange={handleInputChange}\n          placeholder=\"Adicione um complemento ao endereço (opcional).\"\n          fullWidth\n        />\n\n        <TextField \n          id=\"bairro\" \n          label=\"Bairro\" \n          variant=\"filled\"\n          value={client.bairro}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o bairro do cliente\"\n          fullWidth\n          error={error.bairro !== ''}\n          helperText={error.bairro}\n        />\n\n        <TextField \n          id=\"municipio\" \n          label=\"Município\" \n          variant=\"filled\"\n          value={client.municipio}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe a cidade do cliente\"\n          fullWidth\n          error={error.municipio !== ''}\n          helperText={error.municipio}\n        />\n\n        <TextField \n          id=\"uf\" \n          label=\"Estado\" \n          variant=\"filled\"\n          value={client.uf}\n          onChange={event => handleInputChange(event, 'uf')}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o estado do cliente\"\n          select\n          fullWidth\n          error={error.uf !== ''}\n          helperText={error.uf}\n        >\n          { estados.map(estado => <MenuItem value={estado}>{estado}</MenuItem>)}\n        </TextField>\n\n        <InputMask\n          id=\"telefone\" \n          mask={telMask}\n          formatChars={formatChars}\n          value={client.telefone}\n          onChange={(event) => handleInputChange(event, 'telefone')}\n        >\n          {() => <TextField \n            label=\"Telefone\" \n            variant=\"filled\"\n            required  /* not null, precisa ser preenchido */\n            placeholder=\"Informe o telefone do cliente\"\n            fullWidth\n            error={error.telefone !== ''}\n            helperText={error.telefone}\n          />}\n        </InputMask>\n\n        <TextField \n          id=\"email\" \n          label=\"E-Mail\" \n          variant=\"filled\"\n          value={client.email}\n          onChange={handleInputChange}\n          required  /* not null, precisa ser preenchido */\n          placeholder=\"Informe o e-mail do cliente\"\n          fullWidth\n          error={error.email !== ''}\n          helperText={error.email}\n        />\n\n        <Toolbar className={classes.toolbar}>\n          <Button type=\"submit\" variant=\"contained\" color=\"secondary\" disabled={sendBtnStatus.disabled}>\n            {sendBtnStatus.label}\n          </Button>\n          <Button variant=\"contained\" onClick={handleGoBack}>Voltar</Button>\n        </Toolbar>\n\n        {/* <div>\n          {JSON.stringify(client)}\n          <br />\n          currentId: {JSON.stringify(currentId)}\n        </div> */}\n      </form>\n    </>\n  )\n}","/*\nimport logo from './logo.svg';\nimport './App.css';\nimport Button from '@material-ui/core/Button'\n\n      <header className=\"App-header\">\n        <h1>Projeto Karangos</h1>\n        <Button variant=\"contained\" color=\"primary\">Clique aqui!</Button>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>*/\n\nimport TopBar from './ui/TopBar'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport yellow from '@material-ui/core/colors/yellow';\nimport pink from '@material-ui/core/colors/pink';\nimport FooterBar from './ui/FooterBar';\nimport Box from '@material-ui/core/Box'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { BrowserRouter, Route, Switch} from 'react-router-dom'\nimport KarangosList from './routed/KarangosList2'\nimport KarangosForm from './routed/KarangosForm'\nimport ClientsList from './routed/ClientsList'\nimport ClientsForm from './routed/ClientsForm'\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n      main: yellow[500],\n    },\n    secondary: {\n      main: pink[500],\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    backgroundColor: theme.palette.background.default,\n    paddingBottom: '42px',\n    minHeight: '100vh', //100% da altura da area de visualizaçao\n  },\n  routed: {\n    padding: '25px',\n    color: theme.palette.text.primary,\n    fontFamily: theme.typography.fontFamily\n  }\n}))\n\nfunction Main() {\n  const classes = useStyles()\n  return (\n     <Box className={classes.main}>\n       <BrowserRouter> {/* Inicia a regiao onde pode haver troca dinamica de elementos */}\n        <TopBar />\n          <Box id=\"routed\" className={classes.routed}>\n            <Switch> {/* Determina qual elemento sera exibido de acordo com a rota */}\n\n              <Route path=\"/list\">\n                <KarangosList />\n              </Route>\n\n              <Route path=\"/new\">\n                <KarangosForm />\n              </Route>\n\n              <Route path=\"/listc\">\n                <ClientsList />\n              </Route>\n\n              <Route path=\"/newc\">\n                <ClientsForm />\n              </Route>\n\n              <Route path=\"/edit/:id\">\n                <KarangosForm />\n              </Route>\n\n              <Route path=\"/editc/:id\">\n                <ClientsForm />\n              </Route>\n\n            </Switch>\n          </Box>\n        <FooterBar />\n       </BrowserRouter>\n     </Box>\n  )\n}\n\nfunction App() {\n  return (\n  <ThemeProvider theme={theme}>\n    <Main />\n  </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}